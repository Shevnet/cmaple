[tree]
logging_level=INFO
RUN tree=MapleTree(logging_level={tree$logging_level})
[leaf:fmc_1]
host=10.1.101.39
domain=Global
type=fmc
name=fmc_1
leaf_args=leaf_type={leaf:fmc_1$type},name={leaf:fmc_1$name},json_file_path=@model_json_file,FMC_host={leaf:fmc_1$host},FMC_username=@rest_admin_user,FMC_password=@rest_admin_password,FMC_domain={leaf:fmc_1$domain}
RUN leaf={tree$RUN tree}.add_leaf_instance({leaf:fmc_1$leaf_args})
RUN domain_id={leaf:fmc_1$RUN leaf}.get_domain_id(domain={leaf:fmc_1$domain})
[leaf:fmc_1/set_1]
#RUN api_paths={leaf:fmc_1$RUN leaf}.get_all_API_paths_list()
#RUN tabbed_0=output.tabbed_print(_object={leaf:fmc_1/set_1$RUN api_paths})
url=https://{leaf:fmc_1$host}/api/fmc_config/v1/domain/{leaf:fmc_1$RUN domain_id}/policy/accesspolicies
#url=https://{leaf:fmc_1$host}/api/fmc_config/v1/domain/{leaf:fmc_1$RUN domain_id}/object/applications
#smart_url=policy/accesspolicies/$.items[?(@.name=='enclave_access_policy')].id/accessrules/$.items[?(@.name=='rest test rule')].id
#smart_url=policy/accesspolicies/$..items[@.name is 'enclave_access_policy'].id/accessrules/$..items[@.name is 'rest test rule'].id
#smart_url=policy/accesspolicies/$..items[@.name is 'enclave_access_policy'].id/accessrules/$..items[@.name in 'rest test rule 124'].id
#RUN results={leaf:fmc_1$RUN leaf}.GET_smart(url={leaf:fmc_1/set_1$smart_url})
#RUN results={leaf:fmc_1$RUN leaf}.GET_url_list_smart(url={leaf:fmc_1/set_1$smart_url})
#RUN pprint_0=output.pretty_print(_object={leaf:fmc_1/set_1$RUN results})
#RUN responses={leaf:fmc_1$RUN leaf}.GET_responses_by_jsonpath(jsonpath=$..json_dict[?(@.name=='rest test rule')],responses_dict={leaf:fmc_1/set_1$RUN results})
#RUN responses={leaf:fmc_1$RUN leaf}.GET_responses_by_jsonpath(jsonpath=$..json_dict[?(@.name=='rest test rule')].*,responses_dict={leaf:fmc_1/set_1$RUN results})
#RUN responses={leaf:fmc_1$RUN leaf}.GET_responses_by_jsonpath(jsonpath=$..json_dict[@.name is 'rest test rule'],responses_dict={leaf:fmc_1/set_1$RUN results})
#RUN pprint_0=output.pretty_print(_object={leaf:fmc_1/set_1$RUN responses})
#RUN template_1={leaf:fmc_1$RUN leaf}.write_csv_template_from_response(response_json={leaf:fmc_1/set_1$RUN responses},file=@results_file)
#RUN tabbed=output.tabbed_print(_object={leaf:fmc_1/set_1$RUN results},file=@results_file)
#RUN outline1=output.create_outline(_dict={leaf:fmc_1/set_1$RUN results},file=@results_file,responses_only=True)
#RUN outline2=output.create_pickle(struct={leaf:fmc_1/set_1$RUN results},file=results_pickle.pickle)