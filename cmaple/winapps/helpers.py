'''
Created on May 5, 2018

@author: Ron Hinderer - rhindere@cisco.com
'''
import sys
import unicodedata
import string


def remove_punctuation(s):
    exclude = set(string.punctuation)
    s = ''.join(ch for ch in s if ch not in exclude)
    return s


def is_control_character(ch):
    return unicodedata.category(ch)[0]=="C"


def remove_control_characters(s):
    return "".join(ch for ch in s if unicodedata.category(ch)[0]!="C")


def AnimationElements(s):
    animation_elements = 1
    for e in s.TimeLine.MainSequence:
        if e.Timing.TriggerType == 1:
            animation_elements = animation_elements + 1
    return animation_elements


def RemElements(w32_presentation):
    n = w32_presentation.Slides.Count
    for i in range(n,0,-1):
        s = w32_presentation.Slides(i)
        if s.SlideShowTransition.Hidden == True:
            s.SlideShowTransition.Hidden = False
        elif "AutoGenerated" in s.Name:
            s.Delete


def IsVisible(s,h,i):
    # 'first search for a start state
    is_visible = True
    for e in s.TimeLine.MainSequence:
        if e.Shape.Id == h.Id:
            if e.Exit == False:
                is_visible = False
            else:
                is_visible = True
            break

    # 'now run forward animating it
    n = 1
    for e in s.TimeLine.MainSequence:
        if e.Timing.TriggerType == 1:
            n = n + 1
        if n > i:
            break
        if e.Shape.Id == h.Id:
            if e.Exit == False:
                is_visible = True
            else:
                is_visible = False
    return is_visible


def expand_animations(w32_presentation):
 
    n = w32_presentation.Slides.Count
    for i in range(1,n+1):
        s = w32_presentation.Slides(i)
        s.SlideShowTransition.Hidden = True
        expand_slide_animations(w32_presentation, s)


def load_keywords_list(keywords_file):
    kf = open(keywords_file,'r')
    kwl = []
    for line in kf:
        kwl.append(line.strip().lower())
    return kwl


def expand_slide_animations(w32_presentation,s):
 
    max = AnimationElements(s)
    for k in range(1,max+1):
        s2 = s.Duplicate()
        s2.Item(1).NotesPage = s.NotesPage
        s2.Name = '{} {} {}'.format('AutoGenerated:',str(s2.SlideID),str(s.SlideID))
        s2.SlideShowTransition.Hidden = False
        s2.MoveTo(w32_presentation.Slides.Count)
         
        Del = []
        for i2 in range(s2.Shapes.Count,0,-1):
            h = s2.Shapes(i2)
            if not IsVisible(s2, h, k):
                Del.append(h)
        for j in range(s.TimeLine.MainSequence.Count,0,-1):
            s2.TimeLine.MainSequence.Item(1).Delete
        for j in range(len(Del)-1,-1,-1):
            Del[j].Delete()
            Del.pop(j)

